// <auto-generated />
using System;
using MagicVillage_API.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVillageAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicVillage_API.Modelos.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("amenidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("imagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("metrosCuadrados")
                        .HasColumnType("float");

                    b.Property<int>("ocupantes")
                        .HasColumnType("int");

                    b.Property<double>("tarifa")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Villa real",
                            amenidad = "",
                            detalle = "Detalle de la villa ",
                            fechaActualizacion = new DateTime(2023, 8, 17, 10, 16, 43, 260, DateTimeKind.Local).AddTicks(1268),
                            fechaCreacion = new DateTime(2023, 8, 17, 10, 16, 43, 260, DateTimeKind.Local).AddTicks(1258),
                            imagenUrl = "",
                            metrosCuadrados = 5.0,
                            ocupantes = 5,
                            tarifa = 150.0
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Premium vista a la piscina",
                            amenidad = "",
                            detalle = "Detalle de la villa ",
                            fechaActualizacion = new DateTime(2023, 8, 17, 10, 16, 43, 260, DateTimeKind.Local).AddTicks(1270),
                            fechaCreacion = new DateTime(2023, 8, 17, 10, 16, 43, 260, DateTimeKind.Local).AddTicks(1270),
                            imagenUrl = "",
                            metrosCuadrados = 40.0,
                            ocupantes = 4,
                            tarifa = 150.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
